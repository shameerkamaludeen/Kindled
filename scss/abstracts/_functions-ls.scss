/* Abstract - Functions
   ========================================================================== */

@use 'sass:math';
@import '../../node_modules/bootstrap/scss/variables';
@import '../../node_modules/bootstrap/scss/maps';

@function strip-units($value) {
  @return math.div($value, ($value * 0 + 1));
}

/**
 * 1. Arguments
 * $breakpoint - to consider max-width in calculation [values: xs, sm, md, lg, 
 *  xl, xxl]
 * $spacer - to negate padding of one side of column [values: 0, 1, 2, 3, 4, 5] 
 * default is 2 if there is no gutter class used in the row
 *  $cols - number of column width require
 */
@function getColStretchWidth($grid-breakpoint: lg, $spacer: 2, $cols: 8) {

  $max-width: map-get($map: $container-max-widths, $key: $grid-breakpoint);

  @if ($grid-breakpoint =='xs') {
    $max-width: 0px;
  }

  $gutter-x: #{calc(strip-units($container-padding-x) * strip-units(map-get($map: $spacers, $key: $spacer)) * 16)}px;
  $col-width-percentile: 8.33333333 * $cols;
  $col-width: math.floor(math.div(calc($max-width * $col-width-percentile), 100));

  $result: calc(((100% - $max-width) / 2) + $col-width - $gutter-x);
  @return $result;
}